@model OpticSolutions.ViewModels.CreateAppointmentViewModel



<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">

@using (Html.BeginForm("Confirm", "Appointments", FormMethod.Post, null))
{
<div class="box box-primary box-solid">
    <div class="box-header">
        <p class="box-title">Crear nueva cita</p>
    </div>
    <div class="box-body">

        <div class="col-md-6">

                @Html.AntiForgeryToken()
        
                <div class="form-horizontal">
                    <div class="form-group">
                        <label for="StartDate" class="control-label col-md-3">Seleccione una fecha</label>
                        <div class="col-md-4">

                            <input type="date" name="Appointment.StartDateStr" id="appDate" class = "form-control">
                        </div>
                    </div>

                </div>
            
        </div>
    </div>
</div>



 <div class="box box-success box-solid" id="test" style="display:none">
            <div class="box-header">
                <p class="box-title">Disponibilidad del dia</p>

            </div>
            <div class="box-body">
         
                <div id="timeline" >

                </div>

                <hr />
                <div class="col-md-6">

                            <div class="form-horizontal">
                             
                          
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">

                                    <label for="Appointment.DoctorUsername" class="control-label col-md-2">Doctor</label>
                                    <div class="col-md-10">
                                        <select style="width:100%" id="doctorSelect" name="Appointment.DoctorUsername"></select>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="Appointment.Names" class="control-label col-md-2">Nombres</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Appointment.Names, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Appointment.Names, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="Appointment.Last_Names" class="control-label col-md-2">Apellidos</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Appointment.Last_Names, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Appointment.Last_Names, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="Appointment.IdentificationCard" class="control-label col-md-2">Cedula</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Appointment.IdentificationCard, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Appointment.IdentificationCard, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Appointment.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Appointment.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Appointment.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label for="Appointment.Phone" class="control-label col-md-2">Telefono</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Appointment.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Appointment.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label for="Appointment.Comment" class="control-label col-md-2">Comentario</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Appointment.Comment, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Appointment.Comment, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group">
                                    <label class="control-label col-md-2">Hora de inicio</label>
                                    <div class="col-md-10">
                                        <input name="Appointment.StartHourStr" id="startHour" class="timepicker" type="time" />
                                        @Html.ValidationMessageFor(model => model.Appointment.StartHourStr, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Siguiente" class="btn btn-success form-control" />
                                    </div>
                                </div>


                            </div>
                            
</div>
            </div>
        </div>


}




<script src="~/Content/js/plugins/jquery/jquery-2.2.4.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">





    function drawDoctorChart() {




        google.charts.load('current', { 'packages': ['timeline'] });
        google.charts.setOnLoadCallback(drawChart);


        function drawChart() {
            var container = document.getElementById('timeline');
            var chart = new google.visualization.Timeline(container);

            var jsonData = "";
         var appDate = $("#appDate").val();

                $.ajax({
                    type: 'GET',
                    data: { Date: appDate },
                url: '@Url.Action("GetAppointments", "Appointments")',
                success: function (data) {
                    console.log(data);
                    jsonData = data;

                    if (jsonData.length > 0)
                    {
                        var data = new google.visualization.DataTable();
                        data.addColumn('string', 'Doctor');
                        data.addColumn('date', 'Start');
                        data.addColumn('date', 'End');
                        debugger;
                        $.each(jsonData, function (i, jsonData) {
                            var name = jsonData.DoctorFullname;
                            var startHour = jsonData.StartHour;
                            var endHour = jsonData.EndHour;

                            var startMinute = jsonData.StartMinute;
                            var endMinute = jsonData.EndMinute;


                            data.addRows([[name, new Date(0, 0, 0, startHour, startMinute, 0), new Date(0, 0, 0, endHour, endMinute, 0)]]);
                        });



                        var options = {
                            timeline: { colorByRowLabel: true },
                            backgroundColor: '#ffd',
                            title: "Disponibilidad del dia",

                        };

                        chart.draw(data);

                    }
                    else
                    {
                        var text = $('<h3/>', {
                            'html': 'No hay citas pautadas para ese dia, todos los doctores estan disponibles'
                        });
                        $("#timeline").append(text);
                    }
                 
                }
                 });



        }
    };

</script>
<script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
<script type="text/javascript">

      $(document).ready(function () {

          if ($("#appDate").val().length == 0)
          {

          }
          else
          {
              $("#timeline").empty();
              $("#test").show("slow");

              setTimeout(drawDoctorChart, 5);
             

          }



          $("#appDate").change(function () {

              $("#test").hide("slow");
              $("#timeline").empty();


              if ($("#appDate").val().length == 0) {

              }
              else {
                  $("#test").show("slow");
                  setTimeout(drawDoctorChart, 5);
          
              }




          });



          $.ajax({
              type: 'GET',
              url: '@Url.Action("GetDoctors", "Auth")',

              success: function (data) {
                  console.log(data);
                  $("#doctorSelect").empty();

                  $.each(data, function (index, item) {

                      var p = new Option(item.FirstName + " " + item.LastName, item.UserName);
                      $("#doctorSelect").append(p);
                  });

              }
          });
    });

</script>

